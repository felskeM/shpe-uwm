name: Deploy Cloudflare Worker

on:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: deploy-worker
  cancel-in-progress: true

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build OpenNext bundle
        run: npx opennextjs-cloudflare build
        env:
          NEXT_FORCE_WEBPACK: "1"
          NEXT_TELEMETRY_DISABLED: "1"

      - name: Verify Cloudflare auth
        run: npx wrangler whoami
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

      # First deploy (ensures a version exists)
      - name: Deploy (base)
        run: npx wrangler deploy --name shpe-uwm
        env:
          NEXT_FORCE_WEBPACK: "1"
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

      # Rotate/create the secret against the deployed worker
      - name: Put secret RESEND_API_KEY
        if: ${{ secrets.RESEND_API_KEY != '' }}
        run: echo "${{ secrets.RESEND_API_KEY }}" | npx wrangler secret put RESEND_API_KEY --name shpe-uwm
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

      # Deploy again so this new secret is included in the active version
      - name: Deploy (activate secret)
        if: ${{ secrets.RESEND_API_KEY != '' }}
        run: npx wrangler deploy --name shpe-uwm
        env:
          NEXT_FORCE_WEBPACK: "1"
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
